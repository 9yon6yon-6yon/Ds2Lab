Psuedocode:
int sum
for( i=0 to n)
	int user input, n
	sum = sum + n
	
average = (float)sum/n


asdffrgA
asdffrg
------------------------------------

Problem 3:

Sample input: 4 256 2 4 3 3 5 
Sample output : 4 256 2 3 5

Method01 (nur): 
Array/List{4 256 2 -1 3 -1 5}

Array of size n
for(i=0 to n)
	for(j=i+1 to n)
		if(Array[i]==Array[j])
			Array[j]=-1;
Traverse the Array and Print all element except -1

4 : 256 2 4(M)| -1 replace
256: 2 -1 3 3 5
2: -1 3 3 5
-1: skip | 3 3 5
3: 3 (M)| -1 replace
-1: skip | 5
5 : 


Method02 (Abir):
Array1{4 256 2 4 3 3 5}
Array2[257]{0..........0}

n = Max(Array1)
Declare and initialise Array2 of length n+1 and 0
Make an array of the Maximum value of Array1
For (i=0 to n in Array 1)
	if(Array2[Array1[i]] == 0)
	Print Array Array1[i]
	Array2[Array1[i]]=1

4 256 2 _ 3 _ 5


Method03 (osman):
Array1{4 256 2 4 3 3 5}
Array2[]{4}
count=0
for (i=0 to n in Array 1)
	if(i==0) 
		Array2[i]=Array1[i]
		count++;
	else
	for(j=0 to count in Arry2)
		if(Array2[j]==Array[i]) break;
		else 
			Array2[i]=Array1[i];
			count++;
for ( i=0 to count)
				print Array2[i]
			
	

Array2[]{4 256 2 3 5}

4 : count=1
256: 4 count=2
2: 4 256 count=3
4: 4 break
3: 4 256 2 count=4
3: 4 256 2 3 break
5 : 4 256 2 3 count=5

Traverse the Array and Print all element except -1



Array/List{4 256 2 -1 3 -1 5}

4 : 256 2 4(M)| -1 replace
256: 2 -1 3 3 5
2: -1 3 3 5
-1: skip | 3 3 5
3: 3 (M)| -1 replace
-1: skip | 5
5 : 

Traverse the Array and Print all element except -1


